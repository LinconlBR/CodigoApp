import React from "react";
import { base44 } from "@/api/base44Client";
import { useMutation, useQueryClient } from "@tanstack/react-query";
import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Heart, Check } from "lucide-react";

const difficultyColors = {
  easy: "bg-green-100 text-green-800",
  medium: "bg-yellow-100 text-yellow-800",
  hard: "bg-red-100 text-red-800"
};

const difficultyLabels = {
  easy: "Fácil",
  medium: "Médio",
  hard: "Difícil"
};

const impactColors = {
  low: "bg-blue-100 text-blue-800",
  medium: "bg-purple-100 text-purple-800",
  high: "bg-pink-100 text-pink-800"
};

const impactLabels = {
  low: "Baixo Impacto",
  medium: "Médio Impacto",
  high: "Alto Impacto"
};

export default function TipCard({ tip }) {
  const queryClient = useQueryClient();

  const updateTipMutation = useMutation({
    mutationFn: ({ id, data }) => base44.entities.Tip.update(id, data),
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['tips'] });
    },
  });

  const toggleLike = () => {
    updateTipMutation.mutate({
      id: tip.id,
      data: { liked: !tip.liked }
    });
  };

  const toggleImplemented = () => {
    updateTipMutation.mutate({
      id: tip.id,
      data: { implemented: !tip.implemented }
    });
  };

  return (
    <Card className="p-6 border-0 bg-white/80 backdrop-blur-sm hover:shadow-xl transition-all duration-300 group">
      <div className="flex items-start justify-between mb-4">
        <h3 className="font-semibold text-gray-900 text-lg flex-1">{tip.title}</h3>
        <Button
          variant="ghost"
          size="icon"
          onClick={toggleLike}
          className="shrink-0"
        >
          <Heart className={`w-5 h-5 ${tip.liked ? 'fill-red-500 text-red-500' : 'text-gray-400'}`} />
        </Button>
      </div>

      <p className="text-gray-600 text-sm mb-4 leading-relaxed">{tip.content}</p>

      <div className="flex flex-wrap gap-2 mb-4">
        <Badge className={difficultyColors[tip.difficulty]}>
          {difficultyLabels[tip.difficulty]}
        </Badge>
        <Badge className={impactColors[tip.impact]}>
          {impactLabels[tip.impact]}
        </Badge>
      </div>

      <Button
        variant={tip.implemented ? "default" : "outline"}
        size="sm"
        onClick={toggleImplemented}
        className={`w-full ${tip.implemented ? 'bg-emerald-600 hover:bg-emerald-700' : ''}`}
      >
        {tip.implemented ? (
          <>
            <Check className="w-4 h-4 mr-2" />
            Implementado
          </>
        ) : (
          "Marcar como Implementado"
        )}
      </Button>
    </Card>
  );
}